<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed May 18 15:11:59 PDT 2016
  Author:  oracle
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ProcessTokenMessage"
               targetNamespace="http://xmlns.oracle.com/SendInvoice/TwitterFreightRequest/ProcessTokenMessage"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/SendInvoice/TwitterFreightRequest/ProcessTokenMessage"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://twittersendmessage/"
         xmlns:ns2="http://xmlns.oracle.com/SendInvoice/TwitterFreightRequest/SendCancelMessageService"
         xmlns:ns3="http://xmlns.oracle.com/SendInvoice/TwitterFreightRequest/SendCancelMessage"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://www.processtoken.truckhub.org"
         xmlns:ns5="http://www.cancelmessageservice.org"
         xmlns:ns6="http://xmlns.oracle.com/StoreTransportation/StoreTransportation/StoreTransportationProcess"
         xmlns:ns7="http://www.storetransportation.truckhub.org"
         xmlns:ns8="http://xmlns.oracle.com/SendInvoice/SendInvoice/SendInvoiceProcess"
         xmlns:ns9="http://www.sendinvoice.truckhub.org">

    <import namespace="http://xmlns.oracle.com/SendInvoice/TwitterFreightRequest/ProcessTokenMessage" location="ProcessTokenMessage.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="processtokenmessage_client" partnerLinkType="client:ProcessTokenMessage" myRole="ProcessTokenMessageProvider"/>
    <partnerLink name="SendDirectMessage"
                 partnerLinkType="ns1:SendDirectMessage"
                 partnerRole="TwitterSendMessage"/>
    <partnerLink name="SendCancelMessage.sendcancelmessage_client"
                 partnerLinkType="ns3:SendCancelMessage"
                 partnerRole="SendCancelMessageProvider"/>
    <partnerLink name="StoreTransportation"
                 partnerLinkType="ns6:StoreTransportationProcess"
                 partnerRole="StoreTransportationProcessProvider"/>
    <partnerLink name="SendInvoice" partnerLinkType="ns8:SendInvoiceProcess"
                 partnerRole="SendInvoiceProcessProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ProcessTokenMessageRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:ProcessTokenMessageResponseMessage"/>
    <variable name="SendCancelMessage_process_InputVariable"
              messageType="ns3:SendCancelMessageRequestMessage"/>
    <variable name="SendInvalidTokenMessage_sendMessage_InputVariable"
              messageType="ns1:sendMessage"/>
    <variable name="StoreTransportation_process_InputVariable"
              messageType="ns6:StoreTransportationProcessRequestMessage"/>
    <variable name="StoreTransportation_process_OutputVariable"
              messageType="ns6:StoreTransportationProcessResponseMessage"/>
    <variable name="SendInvoice_process_InputVariable"
              messageType="ns8:SendInvoiceProcessRequestMessage"/>
    <variable name="SendInvalidTokenMessage_sendMessage_OutputVariable"
              messageType="ns1:sendMessageResponse"/>
    <variable name="SendInvoice_process_OutputVariable"
              messageType="ns8:SendInvoiceProcessResponseMessage"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ProcessTokenMessage.wsdl) -->
    <receive name="receiveInput" partnerLink="processtokenmessage_client" portType="client:ProcessTokenMessage" operation="process" variable="inputVariable" createInstance="yes"/>
    <if name="If">
      <documentation>
        <![CDATA[Is Cancel]]>
      </documentation>
      <condition>oraext:compare-ignore-case(string($inputVariable.payload/ns4:Text) , "cancel") = 0</condition>
      <sequence name="Sequence1">
        <assign name="AssignSendCancelMessage">
          <copy>
            <from>$inputVariable.payload/ns4:SenderId</from>
            <to>$SendCancelMessage_process_InputVariable.payload</to>
          </copy>
        </assign>
        <invoke name="SendCancelMessage"
                partnerLink="SendCancelMessage.sendcancelmessage_client"
                portType="ns3:SendCancelMessage" operation="process"
                inputVariable="SendCancelMessage_process_InputVariable"
                bpelx:invokeAsDetail="no"/>
        <assign name="AssignOutputDontContinue">
          <copy>
            <from>true()</from>
            <to>$outputVariable.payload/ns4:Continue</to>
          </copy>
        </assign>
      </sequence>
      <elseif>
        <documentation>
          <![CDATA[Valid Token]]>
        </documentation>
        <condition>$inputVariable.payload/ns4:Text = $inputVariable.payload/ns4:Token</condition>
        <sequence name="Sequence2">
          <assign name="AssignStoreTransportation">
            <copy>
              <from>$inputVariable.payload/ns4:Client/ns4:Id</from>
              <to>$StoreTransportation_process_InputVariable.payload/ns7:ClientId</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transporter/ns4:Id</from>
              <to>$StoreTransportation_process_InputVariable.payload/ns7:TransporterId</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transportation/ns4:Quotation</from>
              <to>$StoreTransportation_process_InputVariable.payload/ns7:Quotation</to>
            </copy>
          </assign>
          <invoke name="StoreTransportation"
                  partnerLink="StoreTransportation"
                  portType="ns6:StoreTransportationProcess"
                  operation="process"
                  inputVariable="StoreTransportation_process_InputVariable"
                  outputVariable="StoreTransportation_process_OutputVariable"
                  bpelx:invokeAsDetail="no"/>
          <assign name="AssignSendInvoice">
            <copy>
              <from>$inputVariable.payload/ns4:Client/ns4:Email</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:ToEmail</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Client/ns4:Id</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:ClientId</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transporter/ns4:Name</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:TransporterName</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transporter/ns4:Id</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:TransporterId</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transportation/ns4:Distance</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:TransportationDistanceInKm</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transportation/ns4:ParcelWeight</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:ParcelWeight</to>
            </copy>
            <copy>
              <from>$inputVariable.payload/ns4:Transportation/ns4:Quotation</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:Quotation</to>
            </copy>
            <copy>
              <from>$StoreTransportation_process_OutputVariable.payload/ns7:TransportationId</from>
              <to>$SendInvoice_process_InputVariable.payload/ns9:TransportationId</to>
            </copy>
          </assign>
          <invoke name="SendInvoice"
                  partnerLink="SendInvoice" portType="ns8:SendInvoiceProcess"
                  operation="process"
                  inputVariable="SendInvoice_process_InputVariable"
                  outputVariable="SendInvoice_process_OutputVariable"
                  bpelx:invokeAsDetail="no"/>
          <assign name="AssignOutputContinue">
            <copy>
              <from>false()</from>
              <to>$outputVariable.payload/ns4:Continue</to>
            </copy>
          </assign>
        </sequence>
      </elseif>
      <else>
        <documentation>
          <![CDATA[Invalid Token]]>
        </documentation>
        <sequence name="Sequence3">
          <assign name="AssignSendInvalidTokenMessage">
            <copy>
              <from>$inputVariable.payload/ns4:SenderId</from>
              <to>$SendInvalidTokenMessage_sendMessage_InputVariable.parameters/recepientId</to>
            </copy>
            <copy>
              <from>"Invalid token, request canceled"</from>
              <to>$SendInvalidTokenMessage_sendMessage_InputVariable.parameters/text</to>
            </copy>
          </assign>
          <invoke name="SendInvalidTokenMessage"
                  partnerLink="SendDirectMessage"
                  portType="ns1:TwitterSendMessage" operation="sendMessage"
                  inputVariable="SendInvalidTokenMessage_sendMessage_InputVariable"
                  outputVariable="SendInvalidTokenMessage_sendMessage_OutputVariable"
                  bpelx:invokeAsDetail="no"/>
          <assign name="AssignOutputDontContinue">
            <copy>
              <from>false()</from>
              <to>$outputVariable.payload/ns4:Continue</to>
            </copy>
          </assign>
        </sequence>
      </else>
    </if>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="processtokenmessage_client" portType="client:ProcessTokenMessage" operation="process" variable="outputVariable"/>
  </sequence>
</process>