<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon May 16 08:52:39 PDT 2016
  Author:  oracle
  Type: BPEL 2.0 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="RequestQuotation"
         targetNamespace="http://xmlns.oracle.com/RequestQuotation/RequestQuotationService/RequestQuotation"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/RequestQuotation/RequestQuotationService/RequestQuotation"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://calculatecoordinatesdistanceservice/"
         xmlns:ns2="http://xmlns.oracle.com/ObtainBestOffer/ObtainBestOffer/ObtainBestOffer"
         xmlns:ns3="http://quotation.truckhub.org"
         xmlns:ns4="http://bestoffer.truckhub.org"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap">

    <import namespace="http://xmlns.oracle.com/RequestQuotation/RequestQuotationService/RequestQuotation" location="RequestQuotation.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="requestquotation_client" partnerLinkType="client:RequestQuotation" myRole="RequestQuotationProvider" partnerRole="RequestQuotationRequester"/>
        <partnerLink name="GetDistance" partnerLinkType="ns1:GetDistance"
                     partnerRole="CalculateCoordinatesDistanceService"/>
        <partnerLink name="GetBestOffer" partnerLinkType="ns2:ObtainBestOffer"
                     partnerRole="ObtainBestOfferProvider"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:RequestQuotationRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:RequestQuotationResponseMessage"/>
        <variable name="GetDistance_getCoordinatesDistance_InputVariable"
                  messageType="ns1:getCoordinatesDistance"/>
        <variable name="GetDistance_getCoordinatesDistance_OutputVariable"
                  messageType="ns1:getCoordinatesDistanceResponse"/>
        <variable name="GetBestOffer_process_InputVariable"
                  messageType="ns2:ObtainBestOfferRequestMessage"/>
        <variable name="GetBestOffer_process_OutputVariable"
                  messageType="ns2:ObtainBestOfferResponseMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in RequestQuotation.wsdl) -->
        <receive name="receiveInput" partnerLink="requestquotation_client" portType="client:RequestQuotation" operation="process" variable="inputVariable" createInstance="yes"/>
        <assign name="AssignGetDistance">
            <copy>
                <from>$inputVariable.payload/ns3:origin/ns3:latitude</from>
                <to>$GetDistance_getCoordinatesDistance_InputVariable.parameters/origin_latitude</to>
            </copy>
            <copy>
                <from>$inputVariable.payload/ns3:origin/ns3:longitude</from>
                <to>$GetDistance_getCoordinatesDistance_InputVariable.parameters/origin_longitude</to>
            </copy>
            <copy>
                <from>$inputVariable.payload/ns3:destination/ns3:latitude</from>
                <to>$GetDistance_getCoordinatesDistance_InputVariable.parameters/destination_latitude</to>
            </copy>
            <copy>
                <from>$inputVariable.payload/ns3:destination/ns3:longitude</from>
                <to>$GetDistance_getCoordinatesDistance_InputVariable.parameters/destination_longitude</to>
            </copy>
        </assign>
        <invoke name="GetDistance"
                partnerLink="GetDistance"
                portType="ns1:CalculateCoordinatesDistanceService"
                operation="getCoordinatesDistance"
                inputVariable="GetDistance_getCoordinatesDistance_InputVariable"
                outputVariable="GetDistance_getCoordinatesDistance_OutputVariable"
                bpelx:invokeAsDetail="no"/>
        <assign name="AssignGetBestOffer">
            <copy>
                <from>$inputVariable.payload/ns3:parcelWeight</from>
                <to>$GetBestOffer_process_InputVariable.payload/ns4:parcelWeight</to>
            </copy>
            <copy>
                <from>$GetDistance_getCoordinatesDistance_OutputVariable.parameters/return</from>
                <to>$GetBestOffer_process_InputVariable.payload/ns4:distanceInKm</to>
            </copy>
        </assign>
        <invoke name="GetBestOffer"
                partnerLink="GetBestOffer" portType="ns2:ObtainBestOffer"
                operation="process"
                inputVariable="GetBestOffer_process_InputVariable"
                outputVariable="GetBestOffer_process_OutputVariable"
                bpelx:invokeAsDetail="no"/>
        <if name="If1">
            <documentation>
                <![CDATA[GotOffer]]>
            </documentation>
            <condition>$GetBestOffer_process_OutputVariable.payload/ns4:transporterId &gt; 0</condition>
            <assign name="AssignGotOfferOutput">
                <copy>
                    <from>$GetBestOffer_process_OutputVariable.payload/ns4:offer</from>
                    <to>$outputVariable.payload/ns3:offer</to>
                </copy>
                <copy>
                    <from>$GetBestOffer_process_OutputVariable.payload/ns4:transporterName</from>
                    <to>$outputVariable.payload/ns3:transporterName</to>
                </copy>
                <copy>
                    <from>$GetBestOffer_process_OutputVariable.payload/ns4:transporterId</from>
                    <to>$outputVariable.payload/ns3:transporterId</to>
                </copy>
                <copy>
                    <from>$GetDistance_getCoordinatesDistance_OutputVariable.parameters/return</from>
                    <to>$outputVariable.payload/ns3:distance</to>
                </copy>
                <copy>
                    <from>"OK"</from>
                    <to>$outputVariable.payload/ns3:status</to>
                </copy>
            </assign>
            <else>
                <documentation>
                    <![CDATA[NoOffer]]>
                </documentation>
                <assign name="AssignNoOfferOutput">
                    <copy>
                        <from>"Error"</from>
                        <to>$outputVariable.payload/ns3:status</to>
                    </copy>
                    <copy>
                        <from>"No offer received"</from>
                        <to>$outputVariable.payload/ns3:cause</to>
                    </copy>
                </assign>
            </else>
        </if>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="requestquotation_client" portType="client:RequestQuotationCallback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>